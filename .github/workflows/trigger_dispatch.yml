name: Trigger Read Access Dispatch

on:
  issues:
    types: [opened,labeled]

jobs:
  dispatch-event:
    runs-on: ubuntu-latest
    steps:
      - name: Get username from issue
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          USERNAME=$(gh issue view "$ISSUE_NUMBER" --repo "$GITHUB_REPOSITORY" --json author --jq .author.login)
          if [[ -z "$USERNAME" ]]; then
            echo "Error: Could not retrieve username from issue."
            exit 1
          fi
          echo "Username retrieved: $USERNAME"
      - name: Dispatch event
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "USR: $USERNAME"
          RESPONSE=$(gh api -X POST repos/Fresh-Eyes-on-CMIP/dispatches --input - <<EOF
          {
            "event_type": "read-access",
            "client_payload": {
              "username": "$USERNAME"
            }
          }
          EOF
          )
          if [[ $? -eq 0 ]]; then
            echo "Dispatch event triggered successfully."
            echo "SUCCESS=true" >> $GITHUB_ENV
          else
            echo "Error triggering dispatch event:"
            echo "$RESPONSE"
            echo "SUCCESS=false" >> $GITHUB_ENV
          fi

      
      - name: Close Issue on Success
        if: env.SUCCESS == 'true'
        env:
         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         ISSUE_NUMBER: "${{ github.event.issue.number }}"
         REPO: "${{ github.repository }}"
        run: |
         gh issue close $ISSUE_NUMBER --repo $REPO --comment "Read access granted."
        
      - name: Comment on Issue on Failure
        if: env.SUCCESS == 'false'
        env:
         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         ISSUE_NUMBER: "${{ github.event.issue.number }}"
         REPO: "${{ github.repository }}"
         ERROR_MESSAGE: "${{ env.ERROR_MESSAGE }}"
        run: |
         gh issue comment $ISSUE_NUMBER --repo $REPO --body "Error triggering dispatch event:\n\`\`\`\n$ERROR_MESSAGE\n\`\`\`"
