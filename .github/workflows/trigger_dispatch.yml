name: Trigger Read Access Dispatch

on:
  issues:
    types: [opened]

jobs:
  dispatch-event:
    if: contains(github.event.issue.labels.*.name, 'discussion-user')
    runs-on: self-hosted

    steps:
      - name: Debug GitHub Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Check for ISSUE_NUMBER
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          if [[ -z "$ISSUE_NUMBER" ]]; then
            echo "Error: ISSUE_NUMBER is not set."
            exit 1
          else
            echo "ISSUE_NUMBER is set to $ISSUE_NUMBER"
          fi

      - name: Retrieve Username from Issue
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          GH_TOKEN: ${{ secrets.cmipipo }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          set -e
          echo "Fetching issue details for ISSUE_NUMBER: $ISSUE_NUMBER"
          ISSUE_DETAILS=$(gh issue view "$ISSUE_NUMBER" --repo "$GITHUB_REPOSITORY" --json author)
          echo "Issue Details: $ISSUE_DETAILS"

          USERNAME=$(echo "$ISSUE_DETAILS" | jq -r '.author.login')
          echo "Username: $USERNAME"

          if [[ -z "$USERNAME" ]]; then
            echo "Error: Username is empty."
            exit 1
          fi

          echo "USERNAME=$USERNAME" >> $GITHUB_ENV

      - name: Rename Issue to Include Username
        env:
          GH_TOKEN: ${{ secrets.cmipipo }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
        run: |
          ORIGINAL_TITLE=$(gh issue view $ISSUE_NUMBER --repo $REPO --json title -q .title)
          NEW_TITLE="[${USERNAME}] $ORIGINAL_TITLE"
          echo "Renaming issue to: $NEW_TITLE"
          gh issue edit $ISSUE_NUMBER --repo $REPO --title "$NEW_TITLE"

      - name: Add user to discussions with read access
        env:
          USERNAME: ${{ env.USERNAME }}
          GH_TOKEN: ${{ secrets.cmipipo }}
        run: |
          echo "Adding ${USERNAME} to discussions with read access..."
          RESPONSE=$(gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/Fresh-Eyes-on-CMIP/discussions/collaborators/${USERNAME} \
            -f permission=read) || {
              echo "Error adding collaborator"
              echo "ERROR_MESSAGE=$RESPONSE" >> $GITHUB_ENV
              echo "SUCCESS=false" >> $GITHUB_ENV
              exit 1
            }

          echo "Collaborator added successfully"
          echo "SUCCESS=true" >> $GITHUB_ENV

      - name: Close Issue on Success
        if: env.SUCCESS == 'true'
        env:
          GH_TOKEN: ${{ secrets.cmipipo }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
        run: |
          gh issue comment $ISSUE_NUMBER --repo $REPO --body "✅ Read access granted! You should now be able to access the [discussions](https://github.com/orgs/Fresh-Eyes-on-CMIP/discussions)"
          gh issue close $ISSUE_NUMBER --repo $REPO

      - name: Comment on Issue on Failure
        if: env.SUCCESS == 'false'
        env:
          GH_TOKEN: ${{ secrets.cmipipo }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
          ERROR_MESSAGE: ${{ env.ERROR_MESSAGE }}
        run: |
          gh issue comment $ISSUE_NUMBER --repo $REPO --body "❌ Error triggering dispatch event:\n```\n$ERROR_MESSAGE\n```"
